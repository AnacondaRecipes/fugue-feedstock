{% set name = "fugue" %}
{% set version = "0.8.3" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/fugue-{{ version }}.tar.gz
  sha256: a61c4763b32907c53dee4403dd42e026c97997c1209d9d479f96f9b71c5258a4

build:
  skip: true  # [py<37 or s390x]
  number: 0
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation --ignore-installed -vvv

requirements:
  host:
    - pip
    - python
    - setuptools
    - wheel
  run:
    - python
    - adagio >=0.2.4
    - fugue-sql-antlr >=0.1.6
    - jinja2
    - pandas >=1.2.0,<2
    - pyarrow >=0.15.1
    - qpd >=0.4.0
    - sqlglot
    - triad >=0.8.4

test:
  imports:
    - fugue
  commands:
    - pip check
  requires:
    - pip

about:
  home: https://github.com/fugue-project/fugue
  doc_url: https://fugue-tutorials.readthedocs.io/
  dev_url: https://github.com/fugue-project/fugue
  summary: An abstraction layer for distributed computation
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE 
  description: |
    Fugue is a unified interface for distributed computing that lets
     users execute Python, pandas, and SQL code on Spark and Dask
     without rewrites. It is meant for data scientists/analysts who want
     to focus on defining logic rather than worrying about execution. It
     is also suitable for SQL users wanting to use SQL to define
     end-to-end workflows in pandas, Spark, and Dask. Data scientists
     using pandas wanting to take advantage of Spark or Dask with
     minimal effort, as well as big data practitioners finding testing
     code to be costly and slow would also find Fugue useful.

extra:
  recipe-maintainers:
    - kvnkho
    - goodwanghan
    - charlesbluca
    - thewchan
