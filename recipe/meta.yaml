{% set name = "fugue" %}
{% set version = "0.8.0" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/fugue-{{ version }}.tar.gz
  sha256: b2cd5b1dab5a004d17b357c3e9f457727e954504358e31af8b29188b215b2a21

build:
  number: 0
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - pip
    - python >=3.7
  run:
    - adagio >=0.2.4
    - fugue-sql-antlr >=0.1.1
    - jinja2
    - pandas >=1.0.2
    - pyarrow >=0.15.1
    - python >=3.7
    - qpd >=0.3.1
    - sqlalchemy
    - triad >=0.6.9

test:
  imports:
    - fugue
    - fugue.collections
    - fugue.column
    - fugue.dataframe
    - fugue.execution
    - fugue.extensions
    - fugue.rpc
    - fugue.workflow
  commands:
    - pip check
  requires:
    - pip

about:
  home: http://github.com/fugue-project/fugue
  doc_url: https://fugue-tutorials.readthedocs.io/
  summary: An abstraction layer for distributed computation
  license: Apache-2.0
  license_file: LICENSE  # license file manually packaged.
  description: |
    Fugue is a unified interface for distributed computing that lets
     users execute Python, pandas, and SQL code on Spark and Dask
     without rewrites. It is meant for data scientists/analysts who want
     to focus on defining logic rather than worrying about execution. It
     is also suitable for SQL users wanting to use SQL to define
     end-to-end workflows in pandas, Spark, and Dask. Data scientists
     using pandas wanting to take advantage of Spark or Dask with
     minimal effort, as well as big data practitioners finding testing
     code to be costly and slow would also find Fugue useful.


extra:
  recipe-maintainers:
    - kvnkho
    - goodwanghan
    - charlesbluca
    - thewchan
